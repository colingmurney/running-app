{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\colin\\\\Desktop\\\\GitHub\\\\running-app\\\\client\\\\src\\\\components\\\\converter.jsx\";\nimport React, { Component } from \"react\";\nimport NikeForm from \"./nikeForm\";\nimport getNike from \"../utils/getNike\";\nimport createActivity from \"../utils/createActivity\";\nimport getRefreshToken from \"../utils/getRefreshToken\";\nimport Table from \"./table\";\nimport NavBar from \"./navBar\";\nimport { toggleSelected, updateSelectedIndex } from \"../utils/handleSelected\";\n\nclass Converter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      client_id: \"47805\",\n      client_secret: \"aeb849953d794088bb82fbce08b6e12588fa7725\",\n      refresh_token: sessionStorage.getItem(\"write_refresh_token\") || \"\",\n      activities: JSON.parse(sessionStorage.getItem(\"nikeActivities\")) || [],\n      selectedIndex: [] //test: [{name: \"Colin\"}, null,{name: \"Colin\"}],\n\n    };\n\n    this.handleSubmit = async token => {\n      const activities = await getNike(token);\n      sessionStorage.setItem(\"nikeActivities\", JSON.stringify(activities));\n      this.setState({\n        activities\n      });\n    };\n\n    this.handleConvert = async () => {\n      let {\n        client_id,\n        client_secret,\n        activities,\n        selectedIndex,\n        refresh_token\n      } = this.state;\n      if (!refresh_token) return console.log(\"No refresh token (Please give authorization)\");\n\n      try {\n        for (let i of selectedIndex) {\n          const activityCreated = await createActivity(client_id, client_secret, refresh_token, activities[i].name, activities[i].type, activities[i].start_date_local, activities[i].moving_time, activities[i].description, activities[i].distance);\n          delete activities[i];\n          console.log(activityCreated);\n        } //filter out runs just converted and reset selectedIndex\n        // activities = activities.filter(function (el) {\n        //   return el != null;\n        // });\n\n\n        selectedIndex = [];\n        this.setState({\n          activities,\n          selectedIndex\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleSelect = index => {\n      const activities = toggleSelected(index, this.state.activities);\n      const selectedIndex = updateSelectedIndex(index, this.state.selectedIndex);\n      this.setState({\n        activities,\n        selectedIndex\n      });\n    };\n  }\n\n  async componentDidMount() {\n    if (!this.state.refresh_token) {\n      const search = this.props.location.search;\n      const params = new URLSearchParams(search);\n      const authCode = params.get(\"code\");\n\n      if (authCode) {\n        try {\n          const refresh_token = await getRefreshToken(this.state.client_id, this.state.client_secret, authCode);\n          sessionStorage.setItem(\"write_refresh_token\", refresh_token);\n          this.setState({\n            refresh_token\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n  }\n\n  render() {\n    const {\n      activities\n    } = this.state; //const test = this.state.test.length\n    //console.log(test)\n    //console.log(this.state.test)\n\n    console.log(activities);\n    console.log(activities.length);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      title: \"Converter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NikeForm, {\n      handleSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://www.strava.com/oauth/authorize?client_id=47805&response_type=code&redirect_uri=http://localhost:3000/converter/exchange_token&approval_prompt=force&scope=activity:write\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"authorize\")), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleConvert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, \"Convert\"), activities && !!activities.length && /*#__PURE__*/React.createElement(Table, {\n      activities: activities,\n      handleSelect: this.handleSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default Converter;","map":{"version":3,"sources":["C:/Users/colin/Desktop/GitHub/running-app/client/src/components/converter.jsx"],"names":["React","Component","NikeForm","getNike","createActivity","getRefreshToken","Table","NavBar","toggleSelected","updateSelectedIndex","Converter","state","client_id","client_secret","refresh_token","sessionStorage","getItem","activities","JSON","parse","selectedIndex","handleSubmit","token","setItem","stringify","setState","handleConvert","console","log","i","activityCreated","name","type","start_date_local","moving_time","description","distance","error","handleSelect","index","componentDidMount","search","props","location","params","URLSearchParams","authCode","get","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport NikeForm from \"./nikeForm\";\r\nimport getNike from \"../utils/getNike\"\r\nimport createActivity from \"../utils/createActivity\"\r\nimport getRefreshToken from \"../utils/getRefreshToken\"\r\nimport Table from \"./table\";\r\nimport NavBar from \"./navBar\";\r\nimport {toggleSelected, updateSelectedIndex} from \"../utils/handleSelected\"\r\n\r\n\r\nclass Converter extends Component {\r\n  state = {\r\n    client_id: \"47805\",\r\n    client_secret: \"aeb849953d794088bb82fbce08b6e12588fa7725\",\r\n    refresh_token: sessionStorage.getItem(\"write_refresh_token\") || \"\",\r\n    activities: JSON.parse(sessionStorage.getItem(\"nikeActivities\")) || [],\r\n    selectedIndex: [],\r\n    //test: [{name: \"Colin\"}, null,{name: \"Colin\"}],\r\n  }\r\n   \r\n  async componentDidMount(){\r\n    if (!this.state.refresh_token) {\r\n      const search = this.props.location.search;\r\n      const params = new URLSearchParams(search);\r\n      const authCode = params.get(\"code\");\r\n\r\n      if (authCode) {\r\n        try {\r\n          const refresh_token = await getRefreshToken(\r\n            this.state.client_id,\r\n            this.state.client_secret,\r\n            authCode\r\n          )\r\n\r\n          sessionStorage.setItem(\"write_refresh_token\", refresh_token)\r\n          this.setState({refresh_token})\r\n        } catch(error) {\r\n          console.log(error)\r\n        }\r\n      } \r\n    }\r\n\r\n  }\r\n\r\n    handleSubmit = async (token) => {\r\n      const activities = await getNike(token)\r\n      sessionStorage.setItem(\"nikeActivities\", JSON.stringify(activities));\r\n      this.setState({activities})\r\n    }\r\n\r\n    handleConvert = async () => {\r\n      let {client_id, client_secret, activities, selectedIndex, refresh_token} = this.state\r\n\r\n      if (!refresh_token) return console.log(\"No refresh token (Please give authorization)\")\r\n      \r\n      try {\r\n        \r\n      for (let i of selectedIndex) {\r\n        \r\n          const activityCreated = await createActivity(\r\n            client_id,\r\n            client_secret,\r\n            refresh_token,\r\n            activities[i].name,\r\n            activities[i].type,\r\n            activities[i].start_date_local,\r\n            activities[i].moving_time,\r\n            activities[i].description,\r\n            activities[i].distance\r\n          );\r\n          delete activities[i]\r\n          console.log(activityCreated)\r\n          \r\n        }\r\n        //filter out runs just converted and reset selectedIndex\r\n        // activities = activities.filter(function (el) {\r\n        //   return el != null;\r\n        // });\r\n        selectedIndex = []\r\n\r\n        this.setState({activities, selectedIndex})\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    handleSelect = (index) => {\r\n      const activities = toggleSelected(index, this.state.activities)\r\n      const selectedIndex = updateSelectedIndex(index, this.state.selectedIndex)\r\n      this.setState({activities, selectedIndex})\r\n    }\r\n\r\n  render() {\r\n    const {activities} = this.state;\r\n    //const test = this.state.test.length\r\n    //console.log(test)\r\n    //console.log(this.state.test)\r\n    console.log(activities)\r\n    console.log(activities.length)\r\n    return (\r\n      <div>\r\n        <NavBar title=\"Converter\"/>\r\n        <div className=\"container\">\r\n        <NikeForm handleSubmit={this.handleSubmit} />\r\n        <button><a href=\"http://www.strava.com/oauth/authorize?client_id=47805&response_type=code&redirect_uri=http://localhost:3000/converter/exchange_token&approval_prompt=force&scope=activity:write\">authorize</a></button>\r\n        <button onClick={this.handleConvert}>Convert</button>\r\n        {activities && !!activities.length &&\r\n        <Table activities={activities} handleSelect={this.handleSelect} />}\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Converter;\r\n"]},"metadata":{},"sourceType":"module"}