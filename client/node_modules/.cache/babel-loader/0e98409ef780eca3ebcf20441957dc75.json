{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\colin\\\\Desktop\\\\GitHub\\\\running-app\\\\client\\\\src\\\\components\\\\converter.jsx\";\nimport React, { Component } from \"react\";\nimport NikeForm from \"./nikeForm\";\nimport handleNikeForm from \"../utils/handleNikeForm\";\nimport createActivity from \"../utils/createActivity\";\nimport getRefreshToken from \"../utils/getRefreshToken\";\nimport Table from \"./table\";\n\nclass Converter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      client_id: \"47805\",\n      client_secret: \"aeb849953d794088bb82fbce08b6e12588fa7725\",\n      token: \"\",\n      activities: JSON.parse(sessionStorage.getItem(\"nikeActivities\")) || [],\n      selectedIndex: []\n    };\n\n    this.handleSubmit = async token => {\n      const activities = await handleNikeForm(token);\n      this.setState({\n        activities\n      });\n    };\n\n    this.handleConvert = async () => {\n      //get param from url\n      //use create activity function passing in ONE form this.state.activity to test\n      //then will have to mkae something to select which activities to convert\n      const search = this.props.location.search;\n      const params = new URLSearchParams(search);\n      const authCode = params.get(\"code\");\n      const {\n        client_id,\n        client_secret,\n        activities\n      } = this.state;\n\n      try {\n        const refresh_token = await getRefreshToken(client_id, client_secret, authCode);\n        console.log(activities);\n        console.log(activities[0].name);\n        console.log(activities[0].type);\n        console.log(activities[0].start_date_local);\n        console.log(activities[0].moving_time);\n        console.log(activities[0].description);\n        console.log(activities[0].distance);\n        const activityCreated = await createActivity(client_id, client_secret, refresh_token, activities[0].name, activities[0].type, activities[0].start_date_local, activities[0].moving_time, activities[0].description, activities[0].distance);\n        console.log(activityCreated);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleSelect = id => {\n      console.log(id);\n    };\n  }\n\n  render() {\n    console.log(this.state.activities);\n    const {\n      activities\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NikeForm, {\n      handleSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://www.strava.com/oauth/authorize?client_id=47805&response_type=code&redirect_uri=http://localhost:3000/converter/exchange_token&approval_prompt=force&scope=activity:write\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"authorize\")), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleConvert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"Convert\"), activities && !!activities.length && /*#__PURE__*/React.createElement(Table, {\n      activities: activities,\n      handleSelect: this.handleSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Converter;","map":{"version":3,"sources":["C:/Users/colin/Desktop/GitHub/running-app/client/src/components/converter.jsx"],"names":["React","Component","NikeForm","handleNikeForm","createActivity","getRefreshToken","Table","Converter","state","client_id","client_secret","token","activities","JSON","parse","sessionStorage","getItem","selectedIndex","handleSubmit","setState","handleConvert","search","props","location","params","URLSearchParams","authCode","get","refresh_token","console","log","name","type","start_date_local","moving_time","description","distance","activityCreated","error","handleSelect","id","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport NikeForm from \"./nikeForm\";\r\nimport handleNikeForm from \"../utils/handleNikeForm\"\r\nimport createActivity from \"../utils/createActivity\"\r\nimport getRefreshToken from \"../utils/getRefreshToken\"\r\nimport Table from \"./table\";\r\n\r\nclass Converter extends Component {\r\n  state = {\r\n    client_id: \"47805\",\r\n    client_secret: \"aeb849953d794088bb82fbce08b6e12588fa7725\",\r\n    token: \"\",\r\n    activities: JSON.parse(sessionStorage.getItem(\"nikeActivities\")) || [],\r\n    selectedIndex: []\r\n  }\r\n    \r\n    handleSubmit = async (token) => {\r\n      const activities = await handleNikeForm(token)\r\n      this.setState({activities})\r\n    }\r\n\r\n    handleConvert = async () => {\r\n      //get param from url\r\n      //use create activity function passing in ONE form this.state.activity to test\r\n      //then will have to mkae something to select which activities to convert\r\n\r\n      const search = this.props.location.search;\r\n      const params = new URLSearchParams(search);\r\n      const authCode = params.get(\"code\");\r\n\r\n      const {client_id, client_secret, activities} = this.state\r\n      \r\n      try {\r\n        const refresh_token = await getRefreshToken(\r\n          client_id,\r\n          client_secret,\r\n          authCode\r\n        );\r\n        console.log(activities)\r\n        console.log(activities[0].name)\r\n        console.log(activities[0].type)\r\n        console.log(activities[0].start_date_local)\r\n        console.log(activities[0].moving_time)\r\n        console.log(activities[0].description)\r\n        console.log(activities[0].distance)\r\n        \r\n        const activityCreated = await createActivity(\r\n          client_id,\r\n          client_secret,\r\n          refresh_token,\r\n          activities[0].name,\r\n          activities[0].type,\r\n          activities[0].start_date_local,\r\n          activities[0].moving_time,\r\n          activities[0].description,\r\n          activities[0].distance\r\n        );\r\n        console.log(activityCreated)\r\n        \r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    \r\n    }\r\n\r\n    handleSelect = (id) => {\r\n      console.log(id);\r\n    }\r\n\r\n  render() {\r\n    console.log(this.state.activities)\r\n    const {activities} = this.state;\r\n    return (\r\n      <div>\r\n        <NikeForm handleSubmit={this.handleSubmit} />\r\n        <button><a href=\"http://www.strava.com/oauth/authorize?client_id=47805&response_type=code&redirect_uri=http://localhost:3000/converter/exchange_token&approval_prompt=force&scope=activity:write\">authorize</a></button>\r\n        <button onClick={this.handleConvert}>Convert</button>\r\n        {activities && !!activities.length &&\r\n        <Table activities={activities} handleSelect={this.handleSelect}/>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Converter;\r\n"]},"metadata":{},"sourceType":"module"}