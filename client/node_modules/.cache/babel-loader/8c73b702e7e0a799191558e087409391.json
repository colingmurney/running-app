{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\colin\\\\Desktop\\\\GitHub\\\\running-app\\\\client\\\\src\\\\components\\\\converter.jsx\";\nimport React, { Component } from \"react\";\nimport NikeForm from \"./nikeForm\";\nimport getNike from \"../utils/getNike\";\nimport uploadActivities from \"../utils/uploadActivities\";\nimport getRefreshToken from \"../utils/getRefreshToken\";\nimport Table from \"./table\";\nimport NavBar from \"./navBar\";\nimport { toggleSelected, updateSelectedIndex } from \"../utils/handleSelected\";\nimport getAccessToken from \"../utils/getAccessToken\";\nimport checkUploadStatus from \"../utils/checkUploadStatus\";\n\nclass Converter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      client_id: \"47805\",\n      client_secret: \"aeb849953d794088bb82fbce08b6e12588fa7725\",\n      refresh_token: sessionStorage.getItem(\"write_refresh_token\") || \"\",\n      bearer_token: sessionStorage.getItem(\"nike_bearer_token\") || \"\",\n      activities: JSON.parse(sessionStorage.getItem(\"nikeActivities\")) || [],\n      selectedIndex: [],\n      uploadIds: [],\n      uploadMessages: [],\n      err: \"\"\n    };\n\n    this.handleSubmit = async token => {\n      const activities = await getNike(token);\n      sessionStorage.setItem(\"nikeActivities\", JSON.stringify(activities));\n      sessionStorage.setItem(\"nike_bearer_token\", token);\n      this.setState({\n        activities\n      });\n    };\n\n    this.handleSelect = index => {\n      const activities = toggleSelected(index, this.state.activities);\n      const selectedIndex = updateSelectedIndex(index, this.state.selectedIndex);\n      this.setState({\n        activities,\n        selectedIndex\n      });\n    };\n\n    this.handleConvert = async () => {\n      let {\n        client_id,\n        client_secret,\n        selectedIndex,\n        refresh_token,\n        bearer_token\n      } = this.state; //activities\n\n      if (!refresh_token) return console.log(\"No refresh token (Please give authorization)\");\n\n      try {\n        //use refresh token from state to get access_token\n        const access_token = await getAccessToken(client_id, client_secret, refresh_token);\n        console.log(access_token); //create function that makes http request passing nike_bearer, access_token, and selectedIndex in the body\n\n        const uploadIds = await uploadActivities(selectedIndex, access_token, bearer_token);\n        console.log(uploadIds); //response will be array of ids, make check update http requests with these IDs and see status for each\n\n        for (let id of uploadIds) {\n          const uploadStatus = await checkUploadStatus(id, access_token);\n          console.log(uploadStatus);\n        } //   loop through selected index and delete activities \n        //   delete activities[i] //turns object to null, but does not effect indexing\n        //    reset selecteIndex\n        //   selectedIndex = []\n        //   this.setState({activities, selectedIndex, uploadIds})\n\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleStatus = async () => {};\n  }\n\n  async componentDidMount() {\n    if (!this.state.refresh_token) {\n      const search = this.props.location.search;\n      const params = new URLSearchParams(search);\n      const authCode = params.get(\"code\");\n\n      if (authCode) {\n        try {\n          const refresh_token = await getRefreshToken(this.state.client_id, this.state.client_secret, authCode);\n          sessionStorage.setItem(\"write_refresh_token\", refresh_token);\n          this.setState({\n            refresh_token\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n  }\n\n  render() {\n    const {\n      activities\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      title: \"Converter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NikeForm, {\n      handleSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://www.strava.com/oauth/authorize?client_id=47805&response_type=code&redirect_uri=http://localhost:3000/converter/exchange_token&approval_prompt=force&scope=activity:write\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"authorize\")), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleConvert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, \"Convert\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, \"Status\"), activities && !!activities.length && /*#__PURE__*/React.createElement(Table, {\n      activities: activities,\n      handleSelect: this.handleSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default Converter;","map":{"version":3,"sources":["C:/Users/colin/Desktop/GitHub/running-app/client/src/components/converter.jsx"],"names":["React","Component","NikeForm","getNike","uploadActivities","getRefreshToken","Table","NavBar","toggleSelected","updateSelectedIndex","getAccessToken","checkUploadStatus","Converter","state","client_id","client_secret","refresh_token","sessionStorage","getItem","bearer_token","activities","JSON","parse","selectedIndex","uploadIds","uploadMessages","err","handleSubmit","token","setItem","stringify","setState","handleSelect","index","handleConvert","console","log","access_token","id","uploadStatus","error","handleStatus","componentDidMount","search","props","location","params","URLSearchParams","authCode","get","render","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,cAAR,EAAwBC,mBAAxB,QAAkD,yBAAlD;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;;AAEA,MAAMC,SAAN,SAAwBX,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCY,KADgC,GACxB;AACNC,MAAAA,SAAS,EAAE,OADL;AAENC,MAAAA,aAAa,EAAE,0CAFT;AAGNC,MAAAA,aAAa,EAAEC,cAAc,CAACC,OAAf,CAAuB,qBAAvB,KAAiD,EAH1D;AAINC,MAAAA,YAAY,EAAEF,cAAc,CAACC,OAAf,CAAuB,mBAAvB,KAA+C,EAJvD;AAKNE,MAAAA,UAAU,EAAEC,IAAI,CAACC,KAAL,CAAWL,cAAc,CAACC,OAAf,CAAuB,gBAAvB,CAAX,KAAwD,EAL9D;AAMNK,MAAAA,aAAa,EAAE,EANT;AAONC,MAAAA,SAAS,EAAE,EAPL;AAQNC,MAAAA,cAAc,EAAE,EARV;AASNC,MAAAA,GAAG,EAAE;AATC,KADwB;;AAAA,SAoC9BC,YApC8B,GAoCf,MAAOC,KAAP,IAAiB;AAC9B,YAAMR,UAAU,GAAG,MAAMjB,OAAO,CAACyB,KAAD,CAAhC;AACAX,MAAAA,cAAc,CAACY,OAAf,CAAuB,gBAAvB,EAAyCR,IAAI,CAACS,SAAL,CAAeV,UAAf,CAAzC;AACAH,MAAAA,cAAc,CAACY,OAAf,CAAuB,mBAAvB,EAA4CD,KAA5C;AACA,WAAKG,QAAL,CAAc;AAACX,QAAAA;AAAD,OAAd;AACD,KAzC6B;;AAAA,SA2C9BY,YA3C8B,GA2CdC,KAAD,IAAW;AACxB,YAAMb,UAAU,GAAGZ,cAAc,CAACyB,KAAD,EAAQ,KAAKpB,KAAL,CAAWO,UAAnB,CAAjC;AACA,YAAMG,aAAa,GAAGd,mBAAmB,CAACwB,KAAD,EAAQ,KAAKpB,KAAL,CAAWU,aAAnB,CAAzC;AACA,WAAKQ,QAAL,CAAc;AAACX,QAAAA,UAAD;AAAaG,QAAAA;AAAb,OAAd;AACD,KA/C6B;;AAAA,SAiD9BW,aAjD8B,GAiDd,YAAY;AAC1B,UAAI;AAACpB,QAAAA,SAAD;AAAYC,QAAAA,aAAZ;AAA2BQ,QAAAA,aAA3B;AAA0CP,QAAAA,aAA1C;AAAyDG,QAAAA;AAAzD,UAAyE,KAAKN,KAAlF,CAD0B,CAE1B;;AACA,UAAI,CAACG,aAAL,EAAoB,OAAOmB,OAAO,CAACC,GAAR,CAAY,8CAAZ,CAAP;;AAEpB,UAAI;AACJ;AACE,cAAMC,YAAY,GAAG,MAAM3B,cAAc,CAACI,SAAD,EAAYC,aAAZ,EAA2BC,aAA3B,CAAzC;AACAmB,QAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ,EAHE,CAKJ;;AACA,cAAMb,SAAS,GAAG,MAAMpB,gBAAgB,CAACmB,aAAD,EAAgBc,YAAhB,EAA8BlB,YAA9B,CAAxC;AACAgB,QAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ,EAPI,CASJ;;AACA,aAAK,IAAIc,EAAT,IAAed,SAAf,EAA0B;AAC1B,gBAAMe,YAAY,GAAG,MAAM5B,iBAAiB,CAAC2B,EAAD,EAAKD,YAAL,CAA5C;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAYG,YAAZ;AACC,SAbG,CAeL;AACA;AACD;AACC;AACA;;AAEE,OArBD,CAqBE,OAAOC,KAAP,EAAc;AACdL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD;AACF,KA9E6B;;AAAA,SAgF9BC,YAhF8B,GAgFf,YAAY,CAE1B,CAlF6B;AAAA;;AAahC,QAAMC,iBAAN,GAAyB;AACvB,QAAI,CAAC,KAAK7B,KAAL,CAAWG,aAAhB,EAA+B;AAC7B,YAAM2B,MAAM,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBF,MAAnC;AACA,YAAMG,MAAM,GAAG,IAAIC,eAAJ,CAAoBJ,MAApB,CAAf;AACA,YAAMK,QAAQ,GAAGF,MAAM,CAACG,GAAP,CAAW,MAAX,CAAjB;;AAEA,UAAID,QAAJ,EAAc;AACZ,YAAI;AACF,gBAAMhC,aAAa,GAAG,MAAMX,eAAe,CACzC,KAAKQ,KAAL,CAAWC,SAD8B,EAEzC,KAAKD,KAAL,CAAWE,aAF8B,EAGzCiC,QAHyC,CAA3C;AAMA/B,UAAAA,cAAc,CAACY,OAAf,CAAuB,qBAAvB,EAA8Cb,aAA9C;AACA,eAAKe,QAAL,CAAc;AAACf,YAAAA;AAAD,WAAd;AACD,SATD,CASE,OAAMwB,KAAN,EAAa;AACbL,UAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD;AACF;AACF;AACF;;AAkDDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAC9B,MAAAA;AAAD,QAAe,KAAKP,KAA1B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,QAAD;AAAU,MAAA,YAAY,EAAE,KAAKc,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAQ;AAAG,MAAA,IAAI,EAAC,iLAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAR,CAFA,eAGA;AAAQ,MAAA,OAAO,EAAE,KAAKO,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHA,eAIA;AAAQ,MAAA,OAAO,EAAE,KAAKO,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA,EAKCrB,UAAU,IAAI,CAAC,CAACA,UAAU,CAAC+B,MAA3B,iBACD,oBAAC,KAAD;AAAO,MAAA,UAAU,EAAE/B,UAAnB;AAA+B,MAAA,YAAY,EAAE,KAAKY,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,CAFF,CADF;AAaD;;AAnG+B;;AAsGlC,eAAepB,SAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport NikeForm from \"./nikeForm\";\r\nimport getNike from \"../utils/getNike\"\r\nimport uploadActivities from \"../utils/uploadActivities\"\r\nimport getRefreshToken from \"../utils/getRefreshToken\"\r\nimport Table from \"./table\";\r\nimport NavBar from \"./navBar\";\r\nimport {toggleSelected, updateSelectedIndex} from \"../utils/handleSelected\"\r\nimport getAccessToken from \"../utils/getAccessToken\";\r\nimport checkUploadStatus from \"../utils/checkUploadStatus\"\r\n\r\nclass Converter extends Component {\r\n  state = {\r\n    client_id: \"47805\",\r\n    client_secret: \"aeb849953d794088bb82fbce08b6e12588fa7725\",\r\n    refresh_token: sessionStorage.getItem(\"write_refresh_token\") || \"\",\r\n    bearer_token: sessionStorage.getItem(\"nike_bearer_token\") || \"\",\r\n    activities: JSON.parse(sessionStorage.getItem(\"nikeActivities\")) || [],\r\n    selectedIndex: [],\r\n    uploadIds: [],\r\n    uploadMessages: [],\r\n    err: \"\"\r\n  }\r\n   \r\n  async componentDidMount(){\r\n    if (!this.state.refresh_token) {\r\n      const search = this.props.location.search;\r\n      const params = new URLSearchParams(search);\r\n      const authCode = params.get(\"code\");\r\n\r\n      if (authCode) {\r\n        try {\r\n          const refresh_token = await getRefreshToken(\r\n            this.state.client_id,\r\n            this.state.client_secret,\r\n            authCode\r\n          )\r\n\r\n          sessionStorage.setItem(\"write_refresh_token\", refresh_token)\r\n          this.setState({refresh_token})\r\n        } catch(error) {\r\n          console.log(error)\r\n        }\r\n      } \r\n    }\r\n  }\r\n\r\n    handleSubmit = async (token) => {\r\n      const activities = await getNike(token)\r\n      sessionStorage.setItem(\"nikeActivities\", JSON.stringify(activities));\r\n      sessionStorage.setItem(\"nike_bearer_token\", token);\r\n      this.setState({activities})\r\n    }\r\n\r\n    handleSelect = (index) => {\r\n      const activities = toggleSelected(index, this.state.activities)\r\n      const selectedIndex = updateSelectedIndex(index, this.state.selectedIndex)\r\n      this.setState({activities, selectedIndex})\r\n    }\r\n\r\n    handleConvert = async () => {\r\n      let {client_id, client_secret, selectedIndex, refresh_token, bearer_token} = this.state\r\n      //activities\r\n      if (!refresh_token) return console.log(\"No refresh token (Please give authorization)\")\r\n\r\n      try {\r\n      //use refresh token from state to get access_token\r\n        const access_token = await getAccessToken(client_id, client_secret, refresh_token);\r\n        console.log(access_token)\r\n\r\n      //create function that makes http request passing nike_bearer, access_token, and selectedIndex in the body\r\n      const uploadIds = await uploadActivities(selectedIndex, access_token, bearer_token)\r\n      console.log(uploadIds)\r\n\r\n      //response will be array of ids, make check update http requests with these IDs and see status for each\r\n      for (let id of uploadIds) {\r\n      const uploadStatus = await checkUploadStatus(id, access_token)\r\n      console.log(uploadStatus)\r\n      }\r\n      \r\n     //   loop through selected index and delete activities \r\n     //   delete activities[i] //turns object to null, but does not effect indexing\r\n    //    reset selecteIndex\r\n     //   selectedIndex = []\r\n     //   this.setState({activities, selectedIndex, uploadIds})\r\n      \r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    handleStatus = async () => {\r\n      \r\n    }\r\n\r\n  render() {\r\n    const {activities} = this.state;\r\n    return (\r\n      <div>\r\n        <NavBar title=\"Converter\"/>\r\n        <div className=\"container\">\r\n        <NikeForm handleSubmit={this.handleSubmit} />\r\n        <button><a href=\"http://www.strava.com/oauth/authorize?client_id=47805&response_type=code&redirect_uri=http://localhost:3000/converter/exchange_token&approval_prompt=force&scope=activity:write\">authorize</a></button>\r\n        <button onClick={this.handleConvert}>Convert</button>\r\n        <button onClick={this.handleStatus}>Status</button>\r\n        {activities && !!activities.length &&\r\n        <Table activities={activities} handleSelect={this.handleSelect} />}\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Converter;\r\n"]},"metadata":{},"sourceType":"module"}