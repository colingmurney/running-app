{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\colin\\\\Desktop\\\\GitHub\\\\running-app\\\\client\\\\src\\\\components\\\\table.jsx\";\nimport React, { Component } from \"react\";\n\nclass Table extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.generateTable = array => {\n      // get the reference for the body\n      //var body = document.getElementsByTagName(\"body\")[0];\n      // creates a <table> element and a <tbody> element\n      var tbl = document.createElement(\"table\");\n      var tblBody = document.createElement(\"tbody\"); // creating all cells\n\n      for (const activity in array) {\n        // creates a table row\n        var row = document.createElement(\"tr\");\n\n        for (const property in activity) {\n          // Create a <td> element and a text node, make the text\n          // node the contents of the <td>, and put the <td> at\n          // the end of the table row\n          var cell = document.createElement(\"td\");\n          var cellText = document.createTextNode(property);\n          cell.appendChild(cellText);\n          row.appendChild(cell);\n        } // add the row to the end of the table body\n\n\n        tblBody.appendChild(row);\n      } // put the <tbody> in the <table>\n\n\n      return tbl.appendChild(tblBody); // appends <table> into <body>\n      //body.appendChild(tbl);\n      // sets the border attribute of tbl to 2;\n      //tbl.setAttribute(\"border\", \"2\");\n    };\n  }\n\n  render() {\n    const {\n      activities\n    } = this.props;\n    console.log(activities);\n    console.log(this.generateTable(activities));\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    }, this.generateTable(activities));\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["C:/Users/colin/Desktop/GitHub/running-app/client/src/components/table.jsx"],"names":["React","Component","Table","state","generateTable","array","tbl","document","createElement","tblBody","activity","row","property","cell","cellText","createTextNode","appendChild","render","activities","props","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB,EADoB;;AAAA,SAG5BC,aAH4B,GAGXC,KAAD,IAAW;AACzB;AACA;AAEA;AACA,UAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAV;AACA,UAAIC,OAAO,GAAGF,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd,CANyB,CAQzB;;AACA,WAAK,MAAME,QAAX,IAAuBL,KAAvB,EAA8B;AAC5B;AACA,YAAIM,GAAG,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAV;;AAEA,aAAK,MAAMI,QAAX,IAAuBF,QAAvB,EAAiC;AAC/B;AACA;AACA;AACA,cAAIG,IAAI,GAAGN,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAX;AACA,cAAIM,QAAQ,GAAGP,QAAQ,CAACQ,cAAT,CAAwBH,QAAxB,CAAf;AACAC,UAAAA,IAAI,CAACG,WAAL,CAAiBF,QAAjB;AACAH,UAAAA,GAAG,CAACK,WAAJ,CAAgBH,IAAhB;AACD,SAZ2B,CAc5B;;;AACAJ,QAAAA,OAAO,CAACO,WAAR,CAAoBL,GAApB;AACD,OAzBwB,CA2BzB;;;AACA,aAAOL,GAAG,CAACU,WAAJ,CAAgBP,OAAhB,CAAP,CA5ByB,CA6BzB;AACA;AACA;AACA;AACD,KApC2B;AAAA;;AAsC5BQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKC,KAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,aAAL,CAAmBc,UAAnB,CAAZ;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKd,aAAL,CAAmBc,UAAnB,CAAR,CAAP;AACD;;AA3C2B;;AA8C9B,eAAehB,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Table extends Component {\r\n  state = {};\r\n\r\n  generateTable = (array) => {\r\n    // get the reference for the body\r\n    //var body = document.getElementsByTagName(\"body\")[0];\r\n\r\n    // creates a <table> element and a <tbody> element\r\n    var tbl = document.createElement(\"table\");\r\n    var tblBody = document.createElement(\"tbody\");\r\n\r\n    // creating all cells\r\n    for (const activity in array) {\r\n      // creates a table row\r\n      var row = document.createElement(\"tr\");\r\n\r\n      for (const property in activity) {\r\n        // Create a <td> element and a text node, make the text\r\n        // node the contents of the <td>, and put the <td> at\r\n        // the end of the table row\r\n        var cell = document.createElement(\"td\");\r\n        var cellText = document.createTextNode(property);\r\n        cell.appendChild(cellText);\r\n        row.appendChild(cell);\r\n      }\r\n\r\n      // add the row to the end of the table body\r\n      tblBody.appendChild(row);\r\n    }\r\n\r\n    // put the <tbody> in the <table>\r\n    return tbl.appendChild(tblBody);\r\n    // appends <table> into <body>\r\n    //body.appendChild(tbl);\r\n    // sets the border attribute of tbl to 2;\r\n    //tbl.setAttribute(\"border\", \"2\");\r\n  };\r\n\r\n  render() {\r\n    const { activities } = this.props;\r\n    console.log(activities);\r\n    console.log(this.generateTable(activities));\r\n    return <table>{this.generateTable(activities)}</table>;\r\n  }\r\n}\r\n\r\nexport default Table;\r\n"]},"metadata":{},"sourceType":"module"}