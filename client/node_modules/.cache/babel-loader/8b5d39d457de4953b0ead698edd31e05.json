{"ast":null,"code":"import StravaFormat from \"./stravaTemplate\";\n\nfunction formatNike(nikeActivities) {}\n\nconst formattedNike = [];\n\nfor (let activity in nikeActivities) {\n  let id = activity.id;\n  let name = activity.tags[\"com.nike.name\"];\n  let type = activity.type;\n  let moving_time = parseInt(activity.active_duration_ms) / 1000;\n  let start_date_local = new Date(parseInt(activity.start_epoch_ms));\n  let description = null;\n  let trainer = 0;\n  let commute = 0;\n  let total_elevation_gain = activity.summaries[1].value;\n  let average_heartrate = null; //create new instance of strava template\n\n  let nikeObj = new StravaFormat(id, name, type, moving_time, start_date_local, description, trainer, commute, total_elevation_gain, average_heartrate); //append template to formatted nike array\n\n  formattedNike.push(nikeObj);\n}\n\nexport default formatNike;","map":{"version":3,"sources":["C:/Users/colin/Desktop/GitHub/running-app/client/src/utils/formatNike.js"],"names":["StravaFormat","formatNike","nikeActivities","formattedNike","activity","id","name","tags","type","moving_time","parseInt","active_duration_ms","start_date_local","Date","start_epoch_ms","description","trainer","commute","total_elevation_gain","summaries","value","average_heartrate","nikeObj","push"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,kBAAzB;;AAEA,SAASC,UAAT,CAAoBC,cAApB,EAAoC,CAAE;;AAEtC,MAAMC,aAAa,GAAG,EAAtB;;AAEA,KAAK,IAAIC,QAAT,IAAqBF,cAArB,EAAqC;AACnC,MAAIG,EAAE,GAAGD,QAAQ,CAACC,EAAlB;AACA,MAAIC,IAAI,GAAGF,QAAQ,CAACG,IAAT,CAAc,eAAd,CAAX;AACA,MAAIC,IAAI,GAAGJ,QAAQ,CAACI,IAApB;AACA,MAAIC,WAAW,GAAGC,QAAQ,CAACN,QAAQ,CAACO,kBAAV,CAAR,GAAwC,IAA1D;AACA,MAAIC,gBAAgB,GAAG,IAAIC,IAAJ,CAASH,QAAQ,CAACN,QAAQ,CAACU,cAAV,CAAjB,CAAvB;AACA,MAAIC,WAAW,GAAG,IAAlB;AACA,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,oBAAoB,GAAGd,QAAQ,CAACe,SAAT,CAAmB,CAAnB,EAAsBC,KAAjD;AACA,MAAIC,iBAAiB,GAAG,IAAxB,CAVmC,CAYnC;;AACA,MAAIC,OAAO,GAAG,IAAItB,YAAJ,CACZK,EADY,EAEZC,IAFY,EAGZE,IAHY,EAIZC,WAJY,EAKZG,gBALY,EAMZG,WANY,EAOZC,OAPY,EAQZC,OARY,EASZC,oBATY,EAUZG,iBAVY,CAAd,CAbmC,CAyBnC;;AACAlB,EAAAA,aAAa,CAACoB,IAAd,CAAmBD,OAAnB;AACD;;AACD,eAAerB,UAAf","sourcesContent":["import StravaFormat from \"./stravaTemplate\";\r\n\r\nfunction formatNike(nikeActivities) {}\r\n\r\nconst formattedNike = [];\r\n\r\nfor (let activity in nikeActivities) {\r\n  let id = activity.id;\r\n  let name = activity.tags[\"com.nike.name\"];\r\n  let type = activity.type;\r\n  let moving_time = parseInt(activity.active_duration_ms) / 1000;\r\n  let start_date_local = new Date(parseInt(activity.start_epoch_ms));\r\n  let description = null;\r\n  let trainer = 0;\r\n  let commute = 0;\r\n  let total_elevation_gain = activity.summaries[1].value;\r\n  let average_heartrate = null;\r\n\r\n  //create new instance of strava template\r\n  let nikeObj = new StravaFormat(\r\n    id,\r\n    name,\r\n    type,\r\n    moving_time,\r\n    start_date_local,\r\n    description,\r\n    trainer,\r\n    commute,\r\n    total_elevation_gain,\r\n    average_heartrate\r\n  );\r\n  //append template to formatted nike array\r\n  formattedNike.push(nikeObj);\r\n}\r\nexport default formatNike;\r\n"]},"metadata":{},"sourceType":"module"}