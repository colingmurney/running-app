{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\colin\\\\Desktop\\\\GitHub\\\\running-app\\\\client\\\\src\\\\components\\\\stravaExport.jsx\";\nimport React, { Component } from \"react\";\nimport getRefreshToken from \"../utils/getRefreshToken\";\nimport getActivities from \"../utils/getActivities\";\nimport Table from \"./table\";\nimport DownloadButton from \"./downloadButton\";\nimport NavBar from \"./navBar\";\nimport { toggleSelected, updateSelectedIndex } from \"../utils/handleSelected\";\n\nclass StravaExport extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      client_id: \"47805\",\n      client_secret: \"aeb849953d794088bb82fbce08b6e12588fa7725\",\n      activities: JSON.parse(sessionStorage.getItem(\"stravaActivities\")) || [],\n      selectedIndex: []\n    };\n\n    this.handleSelect = index => {\n      // const activities = [...this.state.activities];\n      // activities[index].isSelected = !activities[index].isSelected;\n      // const selectedIndex = [...this.state.selectedIndex];\n      // if (selectedIndex.includes(index)) {\n      //   const indexInSelectedIndex = selectedIndex.indexOf(index)\n      //   selectedIndex.splice(indexInSelectedIndex, 1)\n      // } else {\n      //   selectedIndex.push(index)\n      // }\n      // this.setState({activities, selectedIndex})\n      const activities = toggleSelected(index, this.state.activities);\n      const selectedIndex = updateSelectedIndex(index, this.state.selectedIndex);\n      this.setState({\n        activities,\n        selectedIndex\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const search = this.props.location.search;\n    const params = new URLSearchParams(search);\n    const authCode = params.get(\"code\");\n\n    try {\n      const refresh_token = await getRefreshToken(this.state.client_id, this.state.client_secret, authCode);\n      const activities = await getActivities(this.state.client_id, this.state.client_secret, refresh_token);\n      sessionStorage.setItem(\"stravaActivities\", JSON.stringify(activities));\n      this.setState({\n        activities\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    console.log(this.state.activities);\n    console.log(this.state.selectedIndex);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      title: \"Strava Export\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DownloadButton, {\n      activities: this.state.activities,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      activities: this.state.activities,\n      handleSelect: this.handleSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default StravaExport;","map":{"version":3,"sources":["C:/Users/colin/Desktop/GitHub/running-app/client/src/components/stravaExport.jsx"],"names":["React","Component","getRefreshToken","getActivities","Table","DownloadButton","NavBar","toggleSelected","updateSelectedIndex","StravaExport","state","client_id","client_secret","activities","JSON","parse","sessionStorage","getItem","selectedIndex","handleSelect","index","setState","componentDidMount","search","props","location","params","URLSearchParams","authCode","get","refresh_token","setItem","stringify","error","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport getRefreshToken from \"../utils/getRefreshToken\";\r\nimport getActivities from \"../utils/getActivities\";\r\nimport Table from \"./table\";\r\nimport DownloadButton from \"./downloadButton\";\r\nimport NavBar from \"./navBar\"\r\nimport {toggleSelected, updateSelectedIndex} from \"../utils/handleSelected\"\r\n\r\nclass StravaExport extends Component {\r\n  state = {\r\n    client_id: \"47805\",\r\n    client_secret: \"aeb849953d794088bb82fbce08b6e12588fa7725\",\r\n    activities: JSON.parse(sessionStorage.getItem(\"stravaActivities\")) || [],\r\n    selectedIndex: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const search = this.props.location.search;\r\n    const params = new URLSearchParams(search);\r\n    const authCode = params.get(\"code\");\r\n\r\n    try {\r\n      const refresh_token = await getRefreshToken(\r\n        this.state.client_id,\r\n        this.state.client_secret,\r\n        authCode\r\n      );\r\n      const activities = await getActivities(\r\n        this.state.client_id,\r\n        this.state.client_secret,\r\n        refresh_token\r\n      );\r\n      sessionStorage.setItem(\"stravaActivities\", JSON.stringify(activities));\r\n      this.setState({ activities });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  handleSelect = (index) => {\r\n    // const activities = [...this.state.activities];\r\n    // activities[index].isSelected = !activities[index].isSelected;\r\n    \r\n    // const selectedIndex = [...this.state.selectedIndex];\r\n    // if (selectedIndex.includes(index)) {\r\n    //   const indexInSelectedIndex = selectedIndex.indexOf(index)\r\n    //   selectedIndex.splice(indexInSelectedIndex, 1)\r\n    // } else {\r\n    //   selectedIndex.push(index)\r\n    // }\r\n    // this.setState({activities, selectedIndex})\r\n\r\n    const activities = toggleSelected(index, this.state.activities)\r\n    const selectedIndex = updateSelectedIndex(index, this.state.selectedIndex)\r\n    this.setState({activities, selectedIndex})\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.activities)\r\n    console.log(this.state.selectedIndex)\r\n    return (\r\n      <div>\r\n        <NavBar title=\"Strava Export\"/>\r\n        <div className=\"container\">\r\n        <DownloadButton activities={this.state.activities} />\r\n        <Table activities={this.state.activities} handleSelect={this.handleSelect} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StravaExport;\r\n"]},"metadata":{},"sourceType":"module"}