{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\colin\\\\Desktop\\\\GitHub\\\\running-app\\\\client\\\\src\\\\components\\\\table.jsx\";\nimport React, { Component } from \"react\";\n\nclass Table extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.generateTable = array => {\n      // get the reference for the body\n      var body = document.getElementsByTagName(\"body\")[0]; // creates a <table> element and a <tbody> element\n\n      var tbl = document.createElement(\"table\");\n      var tblBody = document.createElement(\"tbody\"); // creating all cells\n\n      for (var i = 0; i < 2; i++) {\n        // creates a table row\n        var row = document.createElement(\"tr\");\n\n        for (var j = 0; j < 2; j++) {\n          // Create a <td> element and a text node, make the text\n          // node the contents of the <td>, and put the <td> at\n          // the end of the table row\n          var cell = document.createElement(\"td\");\n          var cellText = document.createTextNode(\"cell in row \" + i + \", column \" + j);\n          cell.appendChild(cellText);\n          row.appendChild(cell);\n        } // add the row to the end of the table body\n\n\n        tblBody.appendChild(row);\n      } // put the <tbody> in the <table>\n\n\n      tbl.appendChild(tblBody); // appends <table> into <body>\n\n      body.appendChild(tbl); // sets the border attribute of tbl to 2;\n\n      tbl.setAttribute(\"border\", \"2\");\n    };\n  }\n\n  render() {\n    const {\n      activities\n    } = this.props;\n    console.log(activities);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }\n    }, this.generateTable);\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["C:/Users/colin/Desktop/GitHub/running-app/client/src/components/table.jsx"],"names":["React","Component","Table","state","generateTable","array","body","document","getElementsByTagName","tbl","createElement","tblBody","i","row","j","cell","cellText","createTextNode","appendChild","setAttribute","render","activities","props","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB,EADoB;;AAAA,SAG5BC,aAH4B,GAGXC,KAAD,IAAW;AACzB;AACA,UAAIC,IAAI,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAX,CAFyB,CAIzB;;AACA,UAAIC,GAAG,GAAGF,QAAQ,CAACG,aAAT,CAAuB,OAAvB,CAAV;AACA,UAAIC,OAAO,GAAGJ,QAAQ,CAACG,aAAT,CAAuB,OAAvB,CAAd,CANyB,CAQzB;;AACA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B;AACA,YAAIC,GAAG,GAAGN,QAAQ,CAACG,aAAT,CAAuB,IAAvB,CAAV;;AAEA,aAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B;AACA;AACA;AACA,cAAIC,IAAI,GAAGR,QAAQ,CAACG,aAAT,CAAuB,IAAvB,CAAX;AACA,cAAIM,QAAQ,GAAGT,QAAQ,CAACU,cAAT,CACb,iBAAiBL,CAAjB,GAAqB,WAArB,GAAmCE,CADtB,CAAf;AAGAC,UAAAA,IAAI,CAACG,WAAL,CAAiBF,QAAjB;AACAH,UAAAA,GAAG,CAACK,WAAJ,CAAgBH,IAAhB;AACD,SAdyB,CAgB1B;;;AACAJ,QAAAA,OAAO,CAACO,WAAR,CAAoBL,GAApB;AACD,OA3BwB,CA6BzB;;;AACAJ,MAAAA,GAAG,CAACS,WAAJ,CAAgBP,OAAhB,EA9ByB,CA+BzB;;AACAL,MAAAA,IAAI,CAACY,WAAL,CAAiBT,GAAjB,EAhCyB,CAiCzB;;AACAA,MAAAA,GAAG,CAACU,YAAJ,CAAiB,QAAjB,EAA2B,GAA3B;AACD,KAtC2B;AAAA;;AAwC5BC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKC,KAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKjB,aAAX,CAAP;AACD;;AA5C2B;;AA+C9B,eAAeF,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Table extends Component {\r\n  state = {};\r\n\r\n  generateTable = (array) => {\r\n    // get the reference for the body\r\n    var body = document.getElementsByTagName(\"body\")[0];\r\n\r\n    // creates a <table> element and a <tbody> element\r\n    var tbl = document.createElement(\"table\");\r\n    var tblBody = document.createElement(\"tbody\");\r\n\r\n    // creating all cells\r\n    for (var i = 0; i < 2; i++) {\r\n      // creates a table row\r\n      var row = document.createElement(\"tr\");\r\n\r\n      for (var j = 0; j < 2; j++) {\r\n        // Create a <td> element and a text node, make the text\r\n        // node the contents of the <td>, and put the <td> at\r\n        // the end of the table row\r\n        var cell = document.createElement(\"td\");\r\n        var cellText = document.createTextNode(\r\n          \"cell in row \" + i + \", column \" + j\r\n        );\r\n        cell.appendChild(cellText);\r\n        row.appendChild(cell);\r\n      }\r\n\r\n      // add the row to the end of the table body\r\n      tblBody.appendChild(row);\r\n    }\r\n\r\n    // put the <tbody> in the <table>\r\n    tbl.appendChild(tblBody);\r\n    // appends <table> into <body>\r\n    body.appendChild(tbl);\r\n    // sets the border attribute of tbl to 2;\r\n    tbl.setAttribute(\"border\", \"2\");\r\n  };\r\n\r\n  render() {\r\n    const { activities } = this.props;\r\n    console.log(activities);\r\n    return <div>{this.generateTable}</div>;\r\n  }\r\n}\r\n\r\nexport default Table;\r\n"]},"metadata":{},"sourceType":"module"}