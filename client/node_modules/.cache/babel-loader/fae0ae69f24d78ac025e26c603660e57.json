{"ast":null,"code":"import StravaTemplate from \"./stravaTemplate\";\n\nfunction formatNike(nikeActivities) {\n  const formattedNike = [];\n  nikeActivities.forEach(activity => {\n    let id = activity.id;\n    let name = activity.tags[\"com.nike.name\"];\n    let type = activity.type;\n    let moving_time = parseInt(activity.active_duration_ms) / 1000;\n    let start_date_local = new Date(parseInt(activity.start_epoch_ms));\n    let description = null;\n    let trainer = 0;\n    let commute = 0;\n    let total_elevation_gain = activity.summaries[1].value;\n    let average_heartrate = null; //create new instance of strava template\n\n    let nikeObj = new StravaTemplate(id, name, type, moving_time, start_date_local, description, trainer, commute, total_elevation_gain, average_heartrate); //append template to formatted nike array\n\n    formattedNike.push(nikeObj);\n  });\n  return formattedNike;\n}\n\nexport default formatNike;","map":{"version":3,"sources":["C:/Users/colin/Desktop/GitHub/running-app/client/src/utils/formatNike.js"],"names":["StravaTemplate","formatNike","nikeActivities","formattedNike","forEach","activity","id","name","tags","type","moving_time","parseInt","active_duration_ms","start_date_local","Date","start_epoch_ms","description","trainer","commute","total_elevation_gain","summaries","value","average_heartrate","nikeObj","push"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,kBAA3B;;AAEA,SAASC,UAAT,CAAoBC,cAApB,EAAoC;AAClC,QAAMC,aAAa,GAAG,EAAtB;AAEAD,EAAAA,cAAc,CAACE,OAAf,CAAwBC,QAAD,IAAc;AACnC,QAAIC,EAAE,GAAGD,QAAQ,CAACC,EAAlB;AACA,QAAIC,IAAI,GAAGF,QAAQ,CAACG,IAAT,CAAc,eAAd,CAAX;AACA,QAAIC,IAAI,GAAGJ,QAAQ,CAACI,IAApB;AACA,QAAIC,WAAW,GAAGC,QAAQ,CAACN,QAAQ,CAACO,kBAAV,CAAR,GAAwC,IAA1D;AACA,QAAIC,gBAAgB,GAAG,IAAIC,IAAJ,CAASH,QAAQ,CAACN,QAAQ,CAACU,cAAV,CAAjB,CAAvB;AACA,QAAIC,WAAW,GAAG,IAAlB;AACA,QAAIC,OAAO,GAAG,CAAd;AACA,QAAIC,OAAO,GAAG,CAAd;AACA,QAAIC,oBAAoB,GAAGd,QAAQ,CAACe,SAAT,CAAmB,CAAnB,EAAsBC,KAAjD;AACA,QAAIC,iBAAiB,GAAG,IAAxB,CAVmC,CAYnC;;AACA,QAAIC,OAAO,GAAG,IAAIvB,cAAJ,CACZM,EADY,EAEZC,IAFY,EAGZE,IAHY,EAIZC,WAJY,EAKZG,gBALY,EAMZG,WANY,EAOZC,OAPY,EAQZC,OARY,EASZC,oBATY,EAUZG,iBAVY,CAAd,CAbmC,CAyBnC;;AACAnB,IAAAA,aAAa,CAACqB,IAAd,CAAmBD,OAAnB;AACD,GA3BD;AA4BA,SAAOpB,aAAP;AACD;;AACD,eAAeF,UAAf","sourcesContent":["import StravaTemplate from \"./stravaTemplate\";\r\n\r\nfunction formatNike(nikeActivities) {\r\n  const formattedNike = [];\r\n\r\n  nikeActivities.forEach((activity) => {\r\n    let id = activity.id;\r\n    let name = activity.tags[\"com.nike.name\"];\r\n    let type = activity.type;\r\n    let moving_time = parseInt(activity.active_duration_ms) / 1000;\r\n    let start_date_local = new Date(parseInt(activity.start_epoch_ms));\r\n    let description = null;\r\n    let trainer = 0;\r\n    let commute = 0;\r\n    let total_elevation_gain = activity.summaries[1].value;\r\n    let average_heartrate = null;\r\n\r\n    //create new instance of strava template\r\n    let nikeObj = new StravaTemplate(\r\n      id,\r\n      name,\r\n      type,\r\n      moving_time,\r\n      start_date_local,\r\n      description,\r\n      trainer,\r\n      commute,\r\n      total_elevation_gain,\r\n      average_heartrate\r\n    );\r\n    //append template to formatted nike array\r\n    formattedNike.push(nikeObj);\r\n  });\r\n  return formattedNike;\r\n}\r\nexport default formatNike;\r\n"]},"metadata":{},"sourceType":"module"}